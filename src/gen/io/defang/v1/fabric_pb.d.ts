// protos/v1/fabric.proto

// @generated by protoc-gen-es v1.10.0
// @generated from file io/defang/v1/fabric.proto (package io.defang.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage, Struct, Timestamp } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";

/**
 * @generated from enum io.defang.v1.Platform
 */
export declare enum Platform {
  /**
   * @generated from enum value: LINUX_AMD64 = 0;
   */
  LINUX_AMD64 = 0,

  /**
   * @generated from enum value: LINUX_ARM64 = 1;
   */
  LINUX_ARM64 = 1,

  /**
   * @generated from enum value: LINUX_ANY = 2;
   */
  LINUX_ANY = 2,
}

/**
 * @generated from enum io.defang.v1.Protocol
 */
export declare enum Protocol {
  /**
   * unspecified means any protocol
   *
   * @generated from enum value: ANY = 0;
   */
  ANY = 0,

  /**
   * @generated from enum value: UDP = 1;
   */
  UDP = 1,

  /**
   * @generated from enum value: TCP = 2;
   */
  TCP = 2,

  /**
   * @generated from enum value: HTTP = 3;
   */
  HTTP = 3,

  /**
   * @generated from enum value: HTTP2 = 4;
   */
  HTTP2 = 4,

  /**
   * HTTP/2 with gRPC health checks
   *
   * @generated from enum value: GRPC = 5;
   */
  GRPC = 5,
}

/**
 * @generated from enum io.defang.v1.Mode
 */
export declare enum Mode {
  /**
   * no load-balancer; suitable for internal services and functions
   *
   * @generated from enum value: HOST = 0;
   */
  HOST = 0,

  /**
   * with load-balancer; suitable for public services
   *
   * @generated from enum value: INGRESS = 1;
   */
  INGRESS = 1,
}

/**
 * @generated from enum io.defang.v1.Network
 */
export declare enum Network {
  /**
   * was: internal=false
   *
   * @generated from enum value: UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * was: internal=true
   *
   * @generated from enum value: PRIVATE = 1;
   */
  PRIVATE = 1,

  /**
   * @generated from enum value: PUBLIC = 2;
   */
  PUBLIC = 2,
}

/**
 * @generated from message io.defang.v1.RestartRequest
 */
export declare class RestartRequest extends Message<RestartRequest> {
  /**
   * @generated from field: repeated string services = 1;
   */
  services: string[];

  /**
   * defaults to tenant ID
   *
   * @generated from field: string project = 2;
   */
  project: string;

  constructor(data?: PartialMessage<RestartRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "io.defang.v1.RestartRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RestartRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RestartRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RestartRequest;

  static equals(a: RestartRequest | PlainMessage<RestartRequest> | undefined, b: RestartRequest | PlainMessage<RestartRequest> | undefined): boolean;
}

/**
 * @generated from message io.defang.v1.TrackRequest
 */
export declare class TrackRequest extends Message<TrackRequest> {
  /**
   * @generated from field: string anon_id = 1;
   */
  anonId: string;

  /**
   * @generated from field: string event = 2;
   */
  event: string;

  /**
   * @generated from field: map<string, string> properties = 3;
   */
  properties: { [key: string]: string };

  /**
   * @generated from field: string os = 4;
   */
  os: string;

  /**
   * @generated from field: string arch = 5;
   */
  arch: string;

  constructor(data?: PartialMessage<TrackRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "io.defang.v1.TrackRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TrackRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TrackRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TrackRequest;

  static equals(a: TrackRequest | PlainMessage<TrackRequest> | undefined, b: TrackRequest | PlainMessage<TrackRequest> | undefined): boolean;
}

/**
 * @generated from message io.defang.v1.DeployRequest
 */
export declare class DeployRequest extends Message<DeployRequest> {
  /**
   * deprecated; use compose
   *
   * @generated from field: repeated io.defang.v1.Service services = 1 [deprecated = true];
   * @deprecated
   */
  services: Service[];

  /**
   * @generated from field: string project = 2;
   */
  project: string;

  /**
   * @generated from field: google.protobuf.Struct compose = 3;
   */
  compose?: Struct;

  constructor(data?: PartialMessage<DeployRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "io.defang.v1.DeployRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DeployRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DeployRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DeployRequest;

  static equals(a: DeployRequest | PlainMessage<DeployRequest> | undefined, b: DeployRequest | PlainMessage<DeployRequest> | undefined): boolean;
}

/**
 * @generated from message io.defang.v1.DeployResponse
 */
export declare class DeployResponse extends Message<DeployResponse> {
  /**
   * @generated from field: repeated io.defang.v1.ServiceInfo services = 1;
   */
  services: ServiceInfo[];

  /**
   * @generated from field: string etag = 2;
   */
  etag: string;

  constructor(data?: PartialMessage<DeployResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "io.defang.v1.DeployResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DeployResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DeployResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DeployResponse;

  static equals(a: DeployResponse | PlainMessage<DeployResponse> | undefined, b: DeployResponse | PlainMessage<DeployResponse> | undefined): boolean;
}

/**
 * @generated from message io.defang.v1.DeleteRequest
 */
export declare class DeleteRequest extends Message<DeleteRequest> {
  /**
   * @generated from field: repeated string names = 1;
   */
  names: string[];

  constructor(data?: PartialMessage<DeleteRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "io.defang.v1.DeleteRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DeleteRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DeleteRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DeleteRequest;

  static equals(a: DeleteRequest | PlainMessage<DeleteRequest> | undefined, b: DeleteRequest | PlainMessage<DeleteRequest> | undefined): boolean;
}

/**
 * @generated from message io.defang.v1.DeleteResponse
 */
export declare class DeleteResponse extends Message<DeleteResponse> {
  /**
   * @generated from field: string etag = 1;
   */
  etag: string;

  constructor(data?: PartialMessage<DeleteResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "io.defang.v1.DeleteResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DeleteResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DeleteResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DeleteResponse;

  static equals(a: DeleteResponse | PlainMessage<DeleteResponse> | undefined, b: DeleteResponse | PlainMessage<DeleteResponse> | undefined): boolean;
}

/**
 * @generated from message io.defang.v1.GenerateFilesRequest
 */
export declare class GenerateFilesRequest extends Message<GenerateFilesRequest> {
  /**
   * @generated from field: string prompt = 1;
   */
  prompt: string;

  /**
   * @generated from field: string language = 2;
   */
  language: string;

  /**
   * @generated from field: bool agree_tos = 3;
   */
  agreeTos: boolean;

  constructor(data?: PartialMessage<GenerateFilesRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "io.defang.v1.GenerateFilesRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GenerateFilesRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GenerateFilesRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GenerateFilesRequest;

  static equals(a: GenerateFilesRequest | PlainMessage<GenerateFilesRequest> | undefined, b: GenerateFilesRequest | PlainMessage<GenerateFilesRequest> | undefined): boolean;
}

/**
 * @generated from message io.defang.v1.File
 */
export declare class File extends Message<File> {
  /**
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * @generated from field: string content = 2;
   */
  content: string;

  constructor(data?: PartialMessage<File>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "io.defang.v1.File";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): File;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): File;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): File;

  static equals(a: File | PlainMessage<File> | undefined, b: File | PlainMessage<File> | undefined): boolean;
}

/**
 * @generated from message io.defang.v1.GenerateFilesResponse
 */
export declare class GenerateFilesResponse extends Message<GenerateFilesResponse> {
  /**
   * @generated from field: repeated io.defang.v1.File files = 1;
   */
  files: File[];

  constructor(data?: PartialMessage<GenerateFilesResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "io.defang.v1.GenerateFilesResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GenerateFilesResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GenerateFilesResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GenerateFilesResponse;

  static equals(a: GenerateFilesResponse | PlainMessage<GenerateFilesResponse> | undefined, b: GenerateFilesResponse | PlainMessage<GenerateFilesResponse> | undefined): boolean;
}

/**
 * @generated from message io.defang.v1.StartGenerateResponse
 */
export declare class StartGenerateResponse extends Message<StartGenerateResponse> {
  /**
   * @generated from field: string uuid = 1;
   */
  uuid: string;

  constructor(data?: PartialMessage<StartGenerateResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "io.defang.v1.StartGenerateResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): StartGenerateResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): StartGenerateResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): StartGenerateResponse;

  static equals(a: StartGenerateResponse | PlainMessage<StartGenerateResponse> | undefined, b: StartGenerateResponse | PlainMessage<StartGenerateResponse> | undefined): boolean;
}

/**
 * @generated from message io.defang.v1.GenerateStatusRequest
 */
export declare class GenerateStatusRequest extends Message<GenerateStatusRequest> {
  /**
   * @generated from field: string uuid = 1;
   */
  uuid: string;

  constructor(data?: PartialMessage<GenerateStatusRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "io.defang.v1.GenerateStatusRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GenerateStatusRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GenerateStatusRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GenerateStatusRequest;

  static equals(a: GenerateStatusRequest | PlainMessage<GenerateStatusRequest> | undefined, b: GenerateStatusRequest | PlainMessage<GenerateStatusRequest> | undefined): boolean;
}

/**
 * @generated from message io.defang.v1.UploadURLRequest
 */
export declare class UploadURLRequest extends Message<UploadURLRequest> {
  /**
   * @generated from field: string digest = 1;
   */
  digest: string;

  constructor(data?: PartialMessage<UploadURLRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "io.defang.v1.UploadURLRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UploadURLRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UploadURLRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UploadURLRequest;

  static equals(a: UploadURLRequest | PlainMessage<UploadURLRequest> | undefined, b: UploadURLRequest | PlainMessage<UploadURLRequest> | undefined): boolean;
}

/**
 * @generated from message io.defang.v1.UploadURLResponse
 */
export declare class UploadURLResponse extends Message<UploadURLResponse> {
  /**
   * @generated from field: string url = 1;
   */
  url: string;

  constructor(data?: PartialMessage<UploadURLResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "io.defang.v1.UploadURLResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UploadURLResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UploadURLResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UploadURLResponse;

  static equals(a: UploadURLResponse | PlainMessage<UploadURLResponse> | undefined, b: UploadURLResponse | PlainMessage<UploadURLResponse> | undefined): boolean;
}

/**
 * @generated from message io.defang.v1.ServiceInfo
 */
export declare class ServiceInfo extends Message<ServiceInfo> {
  /**
   * @generated from field: io.defang.v1.ServiceID service = 1;
   */
  service?: ServiceID;

  /**
   * list of endpoints, one for each port
   *
   * @generated from field: repeated string endpoints = 2;
   */
  endpoints: string[];

  /**
   * was: tenant; defaults to tenant ID
   *
   * @generated from field: string project = 3;
   */
  project: string;

  /**
   * @generated from field: string etag = 4;
   */
  etag: string;

  /**
   * @generated from field: string status = 5;
   */
  status: string;

  /**
   * comma-separated list of NAT IPs
   *
   * @generated from field: repeated string nat_ips = 6;
   */
  natIps: string[];

  /**
   * comma-separated list of internal CIDRs for the load-balancer
   *
   * @generated from field: repeated string lb_ips = 7;
   */
  lbIps: string[];

  /**
   * fully qualified domain name (host)
   *
   * @generated from field: string private_fqdn = 8;
   */
  privateFqdn: string;

  /**
   * fully qualified domain name (ingress)
   *
   * @generated from field: string public_fqdn = 9;
   */
  publicFqdn: string;

  /**
   * @generated from field: google.protobuf.Timestamp created_at = 10;
   */
  createdAt?: Timestamp;

  /**
   * @generated from field: google.protobuf.Timestamp updated_at = 11;
   */
  updatedAt?: Timestamp;

  /**
   * zone ID for byod domain
   *
   * @generated from field: string zone_id = 12;
   */
  zoneId: string;

  /**
   * If we should setup the facilities to use ACME(let's encrypt) certs
   *
   * @generated from field: bool use_acme_cert = 13;
   */
  useAcmeCert: boolean;

  /**
   * domain name for the service
   *
   * @generated from field: string domainname = 15;
   */
  domainname: string;

  constructor(data?: PartialMessage<ServiceInfo>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "io.defang.v1.ServiceInfo";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ServiceInfo;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ServiceInfo;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ServiceInfo;

  static equals(a: ServiceInfo | PlainMessage<ServiceInfo> | undefined, b: ServiceInfo | PlainMessage<ServiceInfo> | undefined): boolean;
}

/**
 * @generated from message io.defang.v1.Secrets
 */
export declare class Secrets extends Message<Secrets> {
  /**
   * @generated from field: repeated string names = 1;
   */
  names: string[];

  /**
   * defaults to tenant ID
   *
   * @generated from field: string project = 2;
   */
  project: string;

  constructor(data?: PartialMessage<Secrets>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "io.defang.v1.Secrets";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Secrets;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Secrets;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Secrets;

  static equals(a: Secrets | PlainMessage<Secrets> | undefined, b: Secrets | PlainMessage<Secrets> | undefined): boolean;
}

/**
 * @generated from message io.defang.v1.SecretValue
 */
export declare class SecretValue extends Message<SecretValue> {
  /**
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * @generated from field: string value = 2;
   */
  value: string;

  /**
   * defaults to tenant ID
   *
   * @generated from field: string project = 3;
   */
  project: string;

  constructor(data?: PartialMessage<SecretValue>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "io.defang.v1.SecretValue";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SecretValue;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SecretValue;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SecretValue;

  static equals(a: SecretValue | PlainMessage<SecretValue> | undefined, b: SecretValue | PlainMessage<SecretValue> | undefined): boolean;
}

/**
 * @generated from message io.defang.v1.TokenRequest
 */
export declare class TokenRequest extends Message<TokenRequest> {
  /**
   * @generated from field: string tenant = 1;
   */
  tenant: string;

  /**
   * from GitHub authorization code flow
   *
   * @generated from field: string auth_code = 2;
   */
  authCode: string;

  /**
   * "tail", "read", etc.
   *
   * @generated from field: repeated string scope = 3;
   */
  scope: string[];

  /**
   * jwt-bearer
   *
   * @generated from field: string assertion = 4;
   */
  assertion: string;

  /**
   * seconds
   *
   * @generated from field: uint32 expires_in = 5;
   */
  expiresIn: number;

  /**
   * @generated from field: string anon_id = 6;
   */
  anonId: string;

  constructor(data?: PartialMessage<TokenRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "io.defang.v1.TokenRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TokenRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TokenRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TokenRequest;

  static equals(a: TokenRequest | PlainMessage<TokenRequest> | undefined, b: TokenRequest | PlainMessage<TokenRequest> | undefined): boolean;
}

/**
 * @generated from message io.defang.v1.TokenResponse
 */
export declare class TokenResponse extends Message<TokenResponse> {
  /**
   * our JWT
   *
   * @generated from field: string access_token = 1;
   */
  accessToken: string;

  constructor(data?: PartialMessage<TokenResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "io.defang.v1.TokenResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TokenResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TokenResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TokenResponse;

  static equals(a: TokenResponse | PlainMessage<TokenResponse> | undefined, b: TokenResponse | PlainMessage<TokenResponse> | undefined): boolean;
}

/**
 * @generated from message io.defang.v1.Status
 */
export declare class Status extends Message<Status> {
  /**
   * @generated from field: string version = 1;
   */
  version: string;

  constructor(data?: PartialMessage<Status>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "io.defang.v1.Status";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Status;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Status;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Status;

  static equals(a: Status | PlainMessage<Status> | undefined, b: Status | PlainMessage<Status> | undefined): boolean;
}

/**
 * @generated from message io.defang.v1.Version
 */
export declare class Version extends Message<Version> {
  /**
   * @generated from field: string fabric = 1;
   */
  fabric: string;

  /**
   * minimum CLI version
   *
   * @generated from field: string cli_min = 3;
   */
  cliMin: string;

  /**
   * minimum Pulumi provider version
   *
   * @generated from field: string pulumi_min = 4;
   */
  pulumiMin: string;

  constructor(data?: PartialMessage<Version>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "io.defang.v1.Version";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Version;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Version;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Version;

  static equals(a: Version | PlainMessage<Version> | undefined, b: Version | PlainMessage<Version> | undefined): boolean;
}

/**
 * @generated from message io.defang.v1.TailRequest
 */
export declare class TailRequest extends Message<TailRequest> {
  /**
   * @generated from field: repeated string services = 1;
   */
  services: string[];

  /**
   * @generated from field: google.protobuf.Timestamp since = 2;
   */
  since?: Timestamp;

  /**
   * @generated from field: string etag = 3;
   */
  etag: string;

  constructor(data?: PartialMessage<TailRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "io.defang.v1.TailRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TailRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TailRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TailRequest;

  static equals(a: TailRequest | PlainMessage<TailRequest> | undefined, b: TailRequest | PlainMessage<TailRequest> | undefined): boolean;
}

/**
 * @generated from message io.defang.v1.LogEntry
 */
export declare class LogEntry extends Message<LogEntry> {
  /**
   * @generated from field: string message = 1;
   */
  message: string;

  /**
   * @generated from field: google.protobuf.Timestamp timestamp = 2;
   */
  timestamp?: Timestamp;

  /**
   * @generated from field: bool stderr = 3;
   */
  stderr: boolean;

  /**
   * @generated from field: string service = 4;
   */
  service: string;

  /**
   * @generated from field: string etag = 5;
   */
  etag: string;

  /**
   * @generated from field: string host = 6;
   */
  host: string;

  constructor(data?: PartialMessage<LogEntry>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "io.defang.v1.LogEntry";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): LogEntry;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): LogEntry;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): LogEntry;

  static equals(a: LogEntry | PlainMessage<LogEntry> | undefined, b: LogEntry | PlainMessage<LogEntry> | undefined): boolean;
}

/**
 * @generated from message io.defang.v1.TailResponse
 */
export declare class TailResponse extends Message<TailResponse> {
  /**
   * @generated from field: repeated io.defang.v1.LogEntry entries = 2;
   */
  entries: LogEntry[];

  /**
   * @generated from field: string service = 3;
   */
  service: string;

  /**
   * @generated from field: string etag = 4;
   */
  etag: string;

  /**
   * @generated from field: string host = 5;
   */
  host: string;

  constructor(data?: PartialMessage<TailResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "io.defang.v1.TailResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TailResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TailResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TailResponse;

  static equals(a: TailResponse | PlainMessage<TailResponse> | undefined, b: TailResponse | PlainMessage<TailResponse> | undefined): boolean;
}

/**
 * @generated from message io.defang.v1.ListServicesResponse
 */
export declare class ListServicesResponse extends Message<ListServicesResponse> {
  /**
   * @generated from field: repeated io.defang.v1.ServiceInfo services = 1;
   */
  services: ServiceInfo[];

  /**
   * @generated from field: string project = 2;
   */
  project: string;

  /**
   * @generated from field: google.protobuf.Struct compose = 3;
   */
  compose?: Struct;

  constructor(data?: PartialMessage<ListServicesResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "io.defang.v1.ListServicesResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListServicesResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListServicesResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListServicesResponse;

  static equals(a: ListServicesResponse | PlainMessage<ListServicesResponse> | undefined, b: ListServicesResponse | PlainMessage<ListServicesResponse> | undefined): boolean;
}

/**
 * TODO: internal message; move to a separate proto file
 *
 * @generated from message io.defang.v1.ProjectUpdate
 */
export declare class ProjectUpdate extends Message<ProjectUpdate> {
  /**
   * @generated from field: repeated io.defang.v1.ServiceInfo services = 1;
   */
  services: ServiceInfo[];

  /**
   * @generated from field: string alb_arn = 2;
   */
  albArn: string;

  /**
   * @generated from field: google.protobuf.Struct compose = 3;
   */
  compose?: Struct;

  constructor(data?: PartialMessage<ProjectUpdate>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "io.defang.v1.ProjectUpdate";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ProjectUpdate;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ProjectUpdate;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ProjectUpdate;

  static equals(a: ProjectUpdate | PlainMessage<ProjectUpdate> | undefined, b: ProjectUpdate | PlainMessage<ProjectUpdate> | undefined): boolean;
}

/**
 * @generated from message io.defang.v1.ServiceID
 */
export declare class ServiceID extends Message<ServiceID> {
  /**
   * @generated from field: string name = 1;
   */
  name: string;

  constructor(data?: PartialMessage<ServiceID>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "io.defang.v1.ServiceID";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ServiceID;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ServiceID;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ServiceID;

  static equals(a: ServiceID | PlainMessage<ServiceID> | undefined, b: ServiceID | PlainMessage<ServiceID> | undefined): boolean;
}

/**
 * @generated from message io.defang.v1.Device
 */
export declare class Device extends Message<Device> {
  /**
   * "gpu", "tpu", etc.
   *
   * @generated from field: repeated string capabilities = 1;
   */
  capabilities: string[];

  /**
   * "nvidia", "amd", etc.
   *
   * @generated from field: string driver = 2;
   */
  driver: string;

  /**
   * number of devices to reserve
   *
   * @generated from field: uint32 count = 3;
   */
  count: number;

  constructor(data?: PartialMessage<Device>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "io.defang.v1.Device";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Device;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Device;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Device;

  static equals(a: Device | PlainMessage<Device> | undefined, b: Device | PlainMessage<Device> | undefined): boolean;
}

/**
 * @generated from message io.defang.v1.Resource
 */
export declare class Resource extends Message<Resource> {
  /**
   * in MiB
   *
   * @generated from field: float memory = 1;
   */
  memory: number;

  /**
   * fractional vCPUs
   *
   * @generated from field: float cpus = 2;
   */
  cpus: number;

  /**
   * devices & capabilities
   *
   * @generated from field: repeated io.defang.v1.Device devices = 3;
   */
  devices: Device[];

  constructor(data?: PartialMessage<Resource>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "io.defang.v1.Resource";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Resource;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Resource;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Resource;

  static equals(a: Resource | PlainMessage<Resource> | undefined, b: Resource | PlainMessage<Resource> | undefined): boolean;
}

/**
 * @generated from message io.defang.v1.Resources
 */
export declare class Resources extends Message<Resources> {
  /**
   * requested resources
   *
   * @generated from field: io.defang.v1.Resource reservations = 1;
   */
  reservations?: Resource;

  constructor(data?: PartialMessage<Resources>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "io.defang.v1.Resources";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Resources;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Resources;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Resources;

  static equals(a: Resources | PlainMessage<Resources> | undefined, b: Resources | PlainMessage<Resources> | undefined): boolean;
}

/**
 * @generated from message io.defang.v1.Deploy
 */
export declare class Deploy extends Message<Deploy> {
  /**
   * number of initial replicas
   *
   * @generated from field: uint32 replicas = 1;
   */
  replicas: number;

  /**
   * reservations and limits
   *
   * @generated from field: io.defang.v1.Resources resources = 2;
   */
  resources?: Resources;

  constructor(data?: PartialMessage<Deploy>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "io.defang.v1.Deploy";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Deploy;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Deploy;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Deploy;

  static equals(a: Deploy | PlainMessage<Deploy> | undefined, b: Deploy | PlainMessage<Deploy> | undefined): boolean;
}

/**
 * @generated from message io.defang.v1.Port
 */
export declare class Port extends Message<Port> {
  /**
   * @generated from field: uint32 target = 1;
   */
  target: number;

  /**
   * @generated from field: io.defang.v1.Protocol protocol = 2;
   */
  protocol: Protocol;

  /**
   * load-balanced (ingress) or not (host)
   *
   * @generated from field: io.defang.v1.Mode mode = 3;
   */
  mode: Mode;

  constructor(data?: PartialMessage<Port>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "io.defang.v1.Port";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Port;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Port;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Port;

  static equals(a: Port | PlainMessage<Port> | undefined, b: Port | PlainMessage<Port> | undefined): boolean;
}

/**
 * @generated from message io.defang.v1.Secret
 */
export declare class Secret extends Message<Secret> {
  /**
   * name of the secret
   *
   * @generated from field: string source = 1;
   */
  source: string;

  constructor(data?: PartialMessage<Secret>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "io.defang.v1.Secret";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Secret;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Secret;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Secret;

  static equals(a: Secret | PlainMessage<Secret> | undefined, b: Secret | PlainMessage<Secret> | undefined): boolean;
}

/**
 * @generated from message io.defang.v1.Build
 */
export declare class Build extends Message<Build> {
  /**
   * path or URL to the build context
   *
   * @generated from field: string context = 1;
   */
  context: string;

  /**
   * path to the Dockerfile
   *
   * @generated from field: string dockerfile = 2;
   */
  dockerfile: string;

  /**
   * build-time variables
   *
   * @generated from field: map<string, string> args = 3;
   */
  args: { [key: string]: string };

  /**
   * in MiB
   *
   * @generated from field: float shm_size = 4;
   */
  shmSize: number;

  /**
   * @generated from field: string target = 5;
   */
  target: string;

  constructor(data?: PartialMessage<Build>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "io.defang.v1.Build";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Build;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Build;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Build;

  static equals(a: Build | PlainMessage<Build> | undefined, b: Build | PlainMessage<Build> | undefined): boolean;
}

/**
 * @generated from message io.defang.v1.HealthCheck
 */
export declare class HealthCheck extends Message<HealthCheck> {
  /**
   * @generated from field: repeated string test = 1;
   */
  test: string[];

  /**
   * in seconds
   *
   * @generated from field: uint32 interval = 2;
   */
  interval: number;

  /**
   * in seconds; must be less than interval
   *
   * @generated from field: uint32 timeout = 3;
   */
  timeout: number;

  /**
   * @generated from field: uint32 retries = 4;
   */
  retries: number;

  constructor(data?: PartialMessage<HealthCheck>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "io.defang.v1.HealthCheck";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): HealthCheck;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): HealthCheck;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): HealthCheck;

  static equals(a: HealthCheck | PlainMessage<HealthCheck> | undefined, b: HealthCheck | PlainMessage<HealthCheck> | undefined): boolean;
}

/**
 * @generated from message io.defang.v1.Service
 */
export declare class Service extends Message<Service> {
  /**
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * @generated from field: string image = 2;
   */
  image: string;

  /**
   * @generated from field: io.defang.v1.Platform platform = 3;
   */
  platform: Platform;

  /**
   * deprecated: use networks
   *
   * @generated from field: bool internal = 4 [deprecated = true];
   * @deprecated
   */
  internal: boolean;

  /**
   * @generated from field: io.defang.v1.Deploy deploy = 5;
   */
  deploy?: Deploy;

  /**
   * @generated from field: repeated io.defang.v1.Port ports = 6;
   */
  ports: Port[];

  /**
   * @generated from field: map<string, string> environment = 7;
   */
  environment: { [key: string]: string };

  /**
   * @generated from field: io.defang.v1.Build build = 8;
   */
  build?: Build;

  /**
   * FIXME: these are actually env vars
   *
   * @generated from field: repeated io.defang.v1.Secret secrets = 9;
   */
  secrets: Secret[];

  /**
   * @generated from field: io.defang.v1.HealthCheck healthcheck = 10;
   */
  healthcheck?: HealthCheck;

  /**
   * @generated from field: repeated string command = 11;
   */
  command: string[];

  /**
   * @generated from field: string domainname = 12;
   */
  domainname: string;

  /**
   * @generated from field: bool init = 13;
   */
  init: boolean;

  /**
   * x-defang-dns-role: role arn used to access route53 to create dns records
   *
   * @generated from field: string dns_role = 14;
   */
  dnsRole: string;

  /**
   * x-defang-static-files: use a managed CDN
   *
   * @generated from field: io.defang.v1.StaticFiles static_files = 15;
   */
  staticFiles?: StaticFiles;

  /**
   * currently only 1 network is supported
   *
   * @generated from field: io.defang.v1.Network networks = 16;
   */
  networks: Network;

  /**
   * x-defang-redis: use a managed redis
   *
   * @generated from field: io.defang.v1.Redis redis = 18;
   */
  redis?: Redis;

  constructor(data?: PartialMessage<Service>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "io.defang.v1.Service";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Service;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Service;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Service;

  static equals(a: Service | PlainMessage<Service> | undefined, b: Service | PlainMessage<Service> | undefined): boolean;
}

/**
 * @generated from message io.defang.v1.StaticFiles
 */
export declare class StaticFiles extends Message<StaticFiles> {
  /**
   * @generated from field: string folder = 1;
   */
  folder: string;

  /**
   * @generated from field: repeated string redirects = 2;
   */
  redirects: string[];

  constructor(data?: PartialMessage<StaticFiles>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "io.defang.v1.StaticFiles";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): StaticFiles;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): StaticFiles;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): StaticFiles;

  static equals(a: StaticFiles | PlainMessage<StaticFiles> | undefined, b: StaticFiles | PlainMessage<StaticFiles> | undefined): boolean;
}

/**
 * @generated from message io.defang.v1.Redis
 */
export declare class Redis extends Message<Redis> {
  constructor(data?: PartialMessage<Redis>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "io.defang.v1.Redis";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Redis;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Redis;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Redis;

  static equals(a: Redis | PlainMessage<Redis> | undefined, b: Redis | PlainMessage<Redis> | undefined): boolean;
}

/**
 * @generated from message io.defang.v1.Event
 */
export declare class Event extends Message<Event> {
  /**
   * required (but we don't care)
   *
   * @generated from field: string specversion = 1;
   */
  specversion: string;

  /**
   * required
   *
   * @generated from field: string type = 2;
   */
  type: string;

  /**
   * required
   *
   * @generated from field: string source = 3;
   */
  source: string;

  /**
   * required
   *
   * @generated from field: string id = 4;
   */
  id: string;

  /**
   * @generated from field: string datacontenttype = 5;
   */
  datacontenttype: string;

  /**
   * @generated from field: string dataschema = 6;
   */
  dataschema: string;

  /**
   * @generated from field: string subject = 7;
   */
  subject: string;

  /**
   * @generated from field: google.protobuf.Timestamp time = 8;
   */
  time?: Timestamp;

  /**
   * @generated from field: bytes data = 9;
   */
  data: Uint8Array;

  constructor(data?: PartialMessage<Event>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "io.defang.v1.Event";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Event;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Event;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Event;

  static equals(a: Event | PlainMessage<Event> | undefined, b: Event | PlainMessage<Event> | undefined): boolean;
}

/**
 * @generated from message io.defang.v1.PublishRequest
 */
export declare class PublishRequest extends Message<PublishRequest> {
  /**
   * @generated from field: io.defang.v1.Event event = 1;
   */
  event?: Event;

  constructor(data?: PartialMessage<PublishRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "io.defang.v1.PublishRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): PublishRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): PublishRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): PublishRequest;

  static equals(a: PublishRequest | PlainMessage<PublishRequest> | undefined, b: PublishRequest | PlainMessage<PublishRequest> | undefined): boolean;
}

/**
 * @generated from message io.defang.v1.SubscribeRequest
 */
export declare class SubscribeRequest extends Message<SubscribeRequest> {
  /**
   * @generated from field: repeated string services = 1;
   */
  services: string[];

  constructor(data?: PartialMessage<SubscribeRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "io.defang.v1.SubscribeRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SubscribeRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SubscribeRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SubscribeRequest;

  static equals(a: SubscribeRequest | PlainMessage<SubscribeRequest> | undefined, b: SubscribeRequest | PlainMessage<SubscribeRequest> | undefined): boolean;
}

/**
 * @generated from message io.defang.v1.SubscribeResponse
 */
export declare class SubscribeResponse extends Message<SubscribeResponse> {
  /**
   * @generated from field: io.defang.v1.ServiceInfo service = 1;
   */
  service?: ServiceInfo;

  constructor(data?: PartialMessage<SubscribeResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "io.defang.v1.SubscribeResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SubscribeResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SubscribeResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SubscribeResponse;

  static equals(a: SubscribeResponse | PlainMessage<SubscribeResponse> | undefined, b: SubscribeResponse | PlainMessage<SubscribeResponse> | undefined): boolean;
}

/**
 * @generated from message io.defang.v1.DelegateSubdomainZoneRequest
 */
export declare class DelegateSubdomainZoneRequest extends Message<DelegateSubdomainZoneRequest> {
  /**
   * @generated from field: repeated string name_server_records = 1;
   */
  nameServerRecords: string[];

  constructor(data?: PartialMessage<DelegateSubdomainZoneRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "io.defang.v1.DelegateSubdomainZoneRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DelegateSubdomainZoneRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DelegateSubdomainZoneRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DelegateSubdomainZoneRequest;

  static equals(a: DelegateSubdomainZoneRequest | PlainMessage<DelegateSubdomainZoneRequest> | undefined, b: DelegateSubdomainZoneRequest | PlainMessage<DelegateSubdomainZoneRequest> | undefined): boolean;
}

/**
 * @generated from message io.defang.v1.DelegateSubdomainZoneResponse
 */
export declare class DelegateSubdomainZoneResponse extends Message<DelegateSubdomainZoneResponse> {
  /**
   * @generated from field: string zone = 1;
   */
  zone: string;

  constructor(data?: PartialMessage<DelegateSubdomainZoneResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "io.defang.v1.DelegateSubdomainZoneResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DelegateSubdomainZoneResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DelegateSubdomainZoneResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DelegateSubdomainZoneResponse;

  static equals(a: DelegateSubdomainZoneResponse | PlainMessage<DelegateSubdomainZoneResponse> | undefined, b: DelegateSubdomainZoneResponse | PlainMessage<DelegateSubdomainZoneResponse> | undefined): boolean;
}

/**
 * @generated from message io.defang.v1.WhoAmIResponse
 */
export declare class WhoAmIResponse extends Message<WhoAmIResponse> {
  /**
   * @generated from field: string tenant = 1;
   */
  tenant: string;

  /**
   * @generated from field: string account = 2;
   */
  account: string;

  /**
   * @generated from field: string region = 3;
   */
  region: string;

  /**
   * @generated from field: string user_id = 4;
   */
  userId: string;

  constructor(data?: PartialMessage<WhoAmIResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "io.defang.v1.WhoAmIResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): WhoAmIResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): WhoAmIResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): WhoAmIResponse;

  static equals(a: WhoAmIResponse | PlainMessage<WhoAmIResponse> | undefined, b: WhoAmIResponse | PlainMessage<WhoAmIResponse> | undefined): boolean;
}

